name: "Terraform deployment"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  terraform-eks-deployment:
    name: "Terraform EKS Deployment"
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: "us-east-1"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init (with upgrade)
        id: init
        run: terraform init -upgrade

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan (Pull Requests Only)
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Comment Terraform Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format üñå \`${{ steps.fmt.outcome }}\`
            #### Terraform Init ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Validate ü§ñ \`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Fail if Plan Fails
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply (Main Branch Only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
